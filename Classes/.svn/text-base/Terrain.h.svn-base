//
//  Camera.h
//
//  Created by scholar on 4/1/10.
//  Copyright 2010 __MyCompanyName__. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "stdint.h"
#import "GLTexture.h"
#import "Mesh.h"

#define TTEX_GRID_WIDTH (16)
#define TTEX_GRID_HEIGHT (16)
#define TTEX_IMG_WIDTH (256)
#define TTEX_IMG_HEIGHT (256)

typedef enum TERRAIN_SUBIMG{
	//first three rows (0-3)
	T_GRASS_TOP=0,
	T_GRASS_BOTTOM,
	T_GRASS_LEFT,
	T_GRASS_RIGHT,
	T_GRASS_FRONT,
	T_GRASS_BACK,
	
	T_DIRT_TOP,
	T_DIRT_BOTTOM,
	T_DIRT_LEFT,
	T_DIRT_RIGHT,
	T_DIRT_FRONT,
	T_DIRT_BACK,
	
	T_STONE_LEFT,
	T_STONE_RIGHT,
	T_STONE_FRONT,
	T_STONE_BACK,
	
	T_BARK_TOP,
	T_BARK_BOTTOM,
	T_BARK_LEFT,
	T_BARK_RIGHT,
	T_BARK_FRONT,
	T_BARK_BACK,
	
	T_LEAVES_TOP,
	T_LEAVES_BOTTOM,
	T_LEAVES_LEFT,
	T_LEAVES_RIGHT,
	T_LEAVES_FRONT,
	T_LEAVES_BACK,
	
	T_SAND_BOTTOM,
	T_SAND_TOP,
	
	T_STONE_TOP,
	T_STONE_BOTTOM,
	
	T_GRAVEL_TOP,
	T_GRAVEL_BOTTOM,
	T_GRAVEL_LEFT,
	T_GRAVEL_RIGHT,
	T_GRAVEL_FRONT,
	T_GRAVEL_BACK,
	
	T_COBBLESTONE_TOP,
	T_COBBLESTONE_BOTTOM,
	T_COBBLESTONE_LEFT,
	T_COBBLESTONE_RIGHT,
	T_COBBLESTONE_FRONT,
	T_COBBLESTONE_BACK,
	
	T_SAND_BACK,
	T_SAND_FRONT,
	T_SAND_RIGHT,
	T_SAND_LEFT,
	
	//next three rows (4-6)
	T_WOOD_TOP,
	T_WOOD_BOTTOM,
	T_WOOD_LEFT,
	T_WOOD_RIGHT,
	T_WOOD_FRONT,
	T_WOOD_BACK,
	
	T_BRICK_TOP,
	T_BRICK_BOTTOM,
	T_BRICK_LEFT,
	T_BRICK_RIGHT,
	T_BRICK_FRONT,
	T_BRICK_BACK,
	
	T_GOLDORE_LEFT,
	T_GOLDORE_RIGHT,
	T_GOLDORE_FRONT,
	T_GOLDORE_BACK,
	
	T_PAVESTONE_TOP,
	T_PAVESTONE_BOTTOM,
	T_PAVESTONE_LEFT,
	T_PAVESTONE_RIGHT,
	T_PAVESTONE_FRONT,
	T_PAVESTONE_BACK,
	
	T_IVY_TOP,
	T_IVY_BOTTOM,
	T_IVY_LEFT,
	T_IVY_RIGHT,
	T_IVY_FRONT,
	T_IVY_BACK,
	
	T_REDCLOTH_BOTTOM,
	T_REDCLOTH_TOP,
	
	T_GOLDORE_TOP,
	T_GOLDORE_BOTTOM,
	
	T_STEEL_TOP,
	T_STEEL_BOTTOM,
	T_STEEL_LEFT,
	T_STEEL_RIGHT,
	T_STEEL_FRONT,
	T_STEEL_BACK,
	
	T_GOLD_TOP,
	T_GOLD_BOTTOM,
	T_GOLD_LEFT,
	T_GOLD_RIGHT,
	T_GOLD_FRONT,
	T_GOLD_BACK,
	
	T_REDCLOTH_BACK,
	T_REDCLOTH_FRONT,
	T_REDCLOTH_RIGHT,
	T_REDCLOTH_LEFT,
	
	//next three rows (7-9)
	T_DIAMOND_TOP,
	T_DIAMOND_BOTTOM,
	T_DIAMOND_LEFT,
	T_DIAMOND_RIGHT,
	T_DIAMOND_FRONT,
	T_DIAMOND_BACK,
	
	T_ORANGECLOTH_TOP,
	T_ORANGECLOTH_BOTTOM,
	T_ORANGECLOTH_LEFT,
	T_ORANGECLOTH_RIGHT,
	T_ORANGECLOTH_FRONT,
	T_ORANGECLOTH_BACK,
	
	T_YELLOWCLOTH_LEFT,
	T_YELLOWCLOTH_RIGHT,
	T_YELLOWCLOTH_FRONT,
	T_YELLOWCLOTH_BACK,
	
	T_GREENCLOTH_TOP,
	T_GREENCLOTH_BOTTOM,
	T_GREENCLOTH_LEFT,
	T_GREENCLOTH_RIGHT,
	T_GREENCLOTH_FRONT,
	T_GREENCLOTH_BACK,
	
	T_TEALCLOTH_TOP,
	T_TEALCLOTH_BOTTOM,
	T_TEALCLOTH_LEFT,
	T_TEALCLOTH_RIGHT,
	T_TEALCLOTH_FRONT,
	T_TEALCLOTH_BACK,
	
	T_LIMECLOTH_BOTTOM,
	T_LIMECLOTH_TOP,
	
	T_YELLOWCLOTH_TOP,
	T_YELLOWCLOTH_BOTTOM,
	
	T_AQUACLOTH_TOP,
	T_AQUACLOTH_BOTTOM,
	T_AQUACLOTH_LEFT,
	T_AQUACLOTH_RIGHT,
	T_AQUACLOTH_FRONT,
	T_AQUACLOTH_BACK,
	
	T_SKYCLOTH_TOP,
	T_SKYCLOTH_BOTTOM,
	T_SKYCLOTH_LEFT,
	T_SKYCLOTH_RIGHT,
	T_SKYCLOTH_FRONT,
	T_SKYCLOTH_BACK,
	
	T_LIMECLOTH_BACK,
	T_LIMECLOTH_FRONT,
	T_LIMECLOTH_RIGHT,
	T_LIMECLOTH_LEFT,
	
	//next three rows (10-12)
	T_DARKBLUECLOTH_TOP,
	T_DARKBLUECLOTH_BOTTOM,
	T_DARKBLUECLOTH_LEFT,
	T_DARKBLUECLOTH_RIGHT,
	T_DARKBLUECLOTH_FRONT,
	T_DARKBLUECLOTH_BACK,
	
	T_PURPLECLOTH_TOP,
	T_PURPLECLOTH_BOTTOM,
	T_PURPLECLOTH_LEFT,
	T_PURPLECLOTH_RIGHT,
	T_PURPLECLOTH_FRONT,
	T_PURPLECLOTH_BACK,
	
	T_VIOLETCLOTH_LEFT,
	T_VIOLETCLOTH_RIGHT,
	T_VIOLETCLOTH_FRONT,
	T_VIOLETCLOTH_BACK,
	
	T_MAGENTACLOTH_TOP,
	T_MAGENTACLOTH_BOTTOM,
	T_MAGENTACLOTH_LEFT,
	T_MAGENTACLOTH_RIGHT,
	T_MAGENTACLOTH_FRONT,
	T_MAGENTACLOTH_BACK,
	
	T_BLACKCLOTH_TOP,
	T_BLACKCLOTH_BOTTOM,
	T_BLACKCLOTH_LEFT,
	T_BLACKCLOTH_RIGHT,
	T_BLACKCLOTH_FRONT,
	T_BLACKCLOTH_BACK,
	
	T_GREYCLOTH_BOTTOM,
	T_GREYCLOTH_TOP,
	
	T_VIOLETCLOTH_TOP,
	T_VIOLETCLOTH_BOTTOM,
	
	T_UNUSED1_TOP,
	T_UNUSED1_BOTTOM,
	T_UNUSED1_LEFT,
	T_UNUSED1_RIGHT,
	T_UNUSED1_FRONT,
	T_UNUSED1_BACK,
	
	T_WHITECLOTH_TOP,
	T_WHITECLOTH_BOTTOM,
	T_WHITECLOTH_LEFT,
	T_WHITECLOTH_RIGHT,
	T_WHITECLOTH_FRONT,
	T_WHITECLOTH_BACK,
	
	T_GREYCLOTH_BACK,
	T_GREYCLOTH_FRONT,
	T_GREYCLOTH_RIGHT,
	T_GREYCLOTH_LEFT
	
} TERRAIN_SUBIMG;

typedef struct {
	GLbyte left;
	GLbyte right;
	GLbyte top;
	GLbyte bottom;
} TexCoords;

typedef struct {
#define TOP 0
#define BOTTOM 1
#define LEFT 2
#define RIGHT 3
#define FRONT 4
#define BACK 5
	TexCoords coords[6];
} TerrainTCs;

extern TerrainTCs* terrainTCs;

static inline void getSubTexCoords(TERRAIN_SUBIMG subIndex, TexCoords* dest){
	GLfloat texRow; GLfloat texCol;
	texRow = subIndex / TTEX_GRID_WIDTH;
	texCol = subIndex % TTEX_GRID_WIDTH;
	dest->left = (GLbyte) lroundf(-128 + 256*texCol/TTEX_GRID_WIDTH);
	dest->right = (GLbyte) lroundf(-128 + 256*(texCol + 1)/TTEX_GRID_WIDTH);
	dest->top = (GLbyte) lroundf(-128 + 256*texRow/TTEX_GRID_HEIGHT);
	dest->bottom = (GLbyte) lroundf(-128 + 256*(texRow + 1)/TTEX_GRID_HEIGHT);
	if(dest->right == -128)
		dest->right = 127;
	NSLog(@"TexCoords for index: %d : left: %d, right: %d, top: %d, bottom %d", subIndex, dest->left, dest->right, dest->top, dest->bottom);
}

static inline TexCoords* getBlockTexCoords(uint8_t type, int side){
	TerrainTCs* t = &terrainTCs[type];
	return &(t->coords[side]);
}

@interface Terrain : NSObject
{
}

+(void) newTerrains;

@end








